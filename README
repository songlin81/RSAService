# Memo

-- App Revision
<1> require 'fs', fs.readFileSync, 
<2> require 'ursa', ursa.createPublichKey, 
<3> public key: crt.encrypt -> private key: key.decrypt
<4> private key: key.privateEncrypt -> public key: crt.publicDecrypt


-- Bash Revision
<1> if [ -f "$pubKey" ]
<2> rm -f $pubKey
<3> openssl genrsa -out ../keypair/my-server.key.pem 2048
<4> [ -f "$priKey" ] \
&& { rm -f $priKey; echo "$priKey removed."; } \
|| { openssl rsa -in ../keypair/my-server.key.pem -pubout -out ../keypair/my-server.pub; echo "$priKey generated."; }


-- Node Installation Revision
<1> Purge server un-used references
    $npm prune
<2> $ sudo apt-get install mysql-server
    $ sudo service mysql stop/start
    $ mysql -h localhost -u root -p
<3> For global installation:
    $ npm install -g mysql
    For local installation:
    (1) Add it to your package.json in the dependencies:
        "dependencies": {
            "mysql": "~2.3.2",
             ...
    (2) $npm install
<4> Initiate json and update it with the listed dependencies.
    $ npm init
    $ npm install youzan-sdk --save
<5> usage of Forever
    $ forever start PollService.js 
    $ forever list
    $ forever stopall
    $ forever stop <pid>
<6> ExpressJS
    $ sudo apt-get install node-express
    $ express nodetest1
    $ cd nodetest1 && npm install


-- Shell Revision
<1> $ date ==> Fri Aug 26 09:22:24 GMT-8 2016
<2> $ seq -s, 1 60 
    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,
    30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,
    56,57,58,59,60
<3> $ chmod u+x startup


-- MySQL Revision
<1> select date(curdate()); -- extract only date
<2> query helper from dual
    INSERT INTO youzanpool ('tid', 'podesc', 'created')
    SELECT 'E20160829125929049223838', '{...}', '2016-08-29 16:17:46'
    FROM dual
    WHERE NOT EXISTS (SELECT 1 FROM youzanpool WHERE tid = 'E20160829125929049223838');


-- Tool Revision
<1> curl -i -H "Accept: application/json" -H "Content-Type: application/json" -X GET http://123.150.130.151:68/TJSTOWebService/ExpressWebService.asmx?WSDL


-- Explained 3rd tools
<1> D3.js: bring data to life using HTML, SVG, and CSS.
https://www.sitepoint.com/d3-js-data-visualizations/?utm_source=sitepoint&utm_medium=relatedsidebar&utm_term=javascript


-- Redis
<1> wget http://download.redis.io/redis-stable.tar.gz
    tar xvzf redis-stable.tar.gz
    cd redis-stable
    make
<2> https://www.digitalocean.com/community/tutorials/how-to-configure-a-redis-cluster-on-ubuntu-14-04
<3> Usage of Redis in NodeJS
    var redis = require("redis"),
        client = redis.createClient(6379, "localhost");
    client.on("error", function(err){
        console.log("Error: " + err);
    });
    client.on("connect", function(){
        // start server();
        client.set("name_key", "hello world", function(err, reply){
            console.log("set: " + reply.toString());
        });
        client.get("name_key", function(err, reply){
            console.log("get: " + reply.toString());
        });
    });
